.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SSHDUMP 1"
.TH SSHDUMP 1 2019-02-28 3.0.0 "The Wireshark Network Analyzer"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
sshdump \- Provide interfaces to capture from a remote host through SSH using a remote capture binary.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
\&\fBsshdump\fR
[\ \fB\-\-help\fR\ ]
[\ \fB\-\-version\fR\ ]
[\ \fB\-\-extcap\-interfaces\fR\ ]
[\ \fB\-\-extcap\-dlts\fR\ ]
[\ \fB\-\-extcap\-interface\fR=<interface>\ ]
[\ \fB\-\-extcap\-config\fR\ ]
[\ \fB\-\-extcap\-capture\-filter\fR=<capture\ filter>\ ]
[\ \fB\-\-capture\fR\ ]
[\ \fB\-\-fifo\fR=<path\ to\ file\ or\ pipe>\ ]
[\ \fB\-\-remote\-host\fR=<IP\ address>\ ]
[\ \fB\-\-remote\-port\fR=<TCP\ port>\ ]
[\ \fB\-\-remote\-username\fR=<username>\ ]
[\ \fB\-\-remote\-password\fR=<password>\ ]
[\ \fB\-\-sshkey\fR=<public\ key\ path<gt ]>
[\ \fB\-\-remote\-interface\fR=<interface>\ ]
[\ \fB\-\-remote\-capture\-command\fR=<capture\ command>\ ]
.PP
\&\fBsshdump\fR
\&\fB\-\-extcap\-interfaces\fR
.PP
\&\fBsshdump\fR
\&\fB\-\-extcap\-interface\fR=<interface>
\&\fB\-\-extcap\-dlts\fR
.PP
\&\fBsshdump\fR
\&\fB\-\-extcap\-interface\fR=<interface>
\&\fB\-\-extcap\-config\fR
.PP
\&\fBsshdump\fR
\&\fB\-\-extcap\-interface\fR=<interface>
\&\fB\-\-fifo\fR=<path\ to\ file\ or\ pipe>
\&\fB\-\-capture\fR
\&\fB\-\-remote\-host=myremotehost\fR
\&\fB\-\-remote\-port=22\fR
\&\fB\-\-remote\-username=user\fR
\&\fB\-\-remote\-interface=eth2\fR
\&\fB\-\-remote\-capture\-command='tcpdump\ \-U\ \-i\ eth0\ \-w\-'\fR
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBSshdump\fR is an extcap tool that allows one to run a remote capture
tool over a SSH connection. The requirement is that the capture
executable must have the capabilities to capture from the wanted
interface.
.PP
The feature is functionally equivalent to run commands like
.PP
$ ssh remoteuser@remotehost \-p 22222 'tcpdump \-U \-i IFACE \-w \-' > FILE &
$ wireshark FILE
.PP
$ ssh remoteuser@remotehost '/sbin/dumpcap \-i IFACE \-P \-w \- \-f "not port 22"' > FILE &
$ wireshark FILE
.PP
$ ssh somehost dumpcap \-P \-w \- \-f udp | tshark \-i \-
.PP
Supported interfaces:
.IP "1. ssh" 4
.IX Item "1. ssh"
.SH OPTIONS
.IX Header "OPTIONS"
.PD 0
.IP \-\-help 4
.IX Item "--help"
.PD
Print program arguments.
.IP \-\-version 4
.IX Item "--version"
Print program version.
.IP \-\-extcap\-interfaces 4
.IX Item "--extcap-interfaces"
List available interfaces.
.IP \-\-extcap\-interface=<interface> 4
.IX Item "--extcap-interface=<interface>"
Use specified interfaces.
.IP \-\-extcap\-dlts 4
.IX Item "--extcap-dlts"
List DLTs of specified interface.
.IP \-\-extcap\-config 4
.IX Item "--extcap-config"
List configuration options of specified interface.
.IP \-\-capture 4
.IX Item "--capture"
Start capturing from specified interface and write raw packet data to the location specified by \-\-fifo.
.IP "\-\-fifo=<path to file or pipe>" 4
.IX Item "--fifo=<path to file or pipe>"
Save captured packet to file or send it through pipe.
.IP "\-\-remote\-host=<remote host>" 4
.IX Item "--remote-host=<remote host>"
The address of the remote host for capture.
.IP "\-\-remote\-port=<remote port>" 4
.IX Item "--remote-port=<remote port>"
The SSH port of the remote host.
.IP \-\-remote\-username=<username> 4
.IX Item "--remote-username=<username>"
The username for ssh authentication.
.IP \-\-remote\-password=<password> 4
.IX Item "--remote-password=<password>"
The password to use (if not ssh-agent and pubkey are used). WARNING: the
passwords are stored in plaintext and visible to all users on this system. It is
recommended to use keyfiles with a SSH agent.
.IP "\-\-sshkey=<SSH private key path>" 4
.IX Item "--sshkey=<SSH private key path>"
The path to a private key for authentication.
.IP "\-\-remote\-interface=<remote interface>" 4
.IX Item "--remote-interface=<remote interface>"
The remote network interface to capture from.
.IP "\-\-remote\-capture\-command=<capture command>" 4
.IX Item "--remote-capture-command=<capture command>"
A custom remote capture command that produces the remote stream that is shown in Wireshark.
The command must be able to produce a PCAP stream written to STDOUT. See below for more
examples.
.Sp
When specified, this command will be used as is, no interface, port or filter
options will be added.
.IP "\-\-extcap\-capture\-filter=<capture filter>" 4
.IX Item "--extcap-capture-filter=<capture filter>"
The capture filter
.SH EXAMPLES
.IX Header "EXAMPLES"
To see program arguments:
.PP
.Vb 1
\&    sshdump \-\-help
.Ve
.PP
To see program version:
.PP
.Vb 1
\&    sshdump \-\-version
.Ve
.PP
To see interfaces:
.PP
.Vb 1
\&    sshdump \-\-extcap\-interfaces
.Ve
.PP
Only one interface (sshdump) is supported.
.PP
.Vb 2
\&  Output:
\&    interface {value=sshdump}{display=SSH remote capture}
.Ve
.PP
To see interface DLTs:
.PP
.Vb 1
\&    sshdump \-\-extcap\-interface=sshdump \-\-extcap\-dlts
\&
\&  Output:
\&    dlt {number=147}{name=sshdump}{display=Remote capture dependent DLT}
.Ve
.PP
To see interface configuration options:
.PP
.Vb 1
\&    sshdump \-\-extcap\-interface=sshdump \-\-extcap\-config
\&
\&  Output:
\&
\&    arg {number=0}{call=\-\-remote\-host}{display=Remote SSH server address}{type=string}
\&        {tooltip=The remote SSH host. It can be both an IP address or a hostname}{required=true}{group=Server}
\&    arg {number=1}{call=\-\-remote\-port}{display=Remote SSH server port}{type=unsigned}
\&        {tooltip=The remote SSH host port (1\-65535)}{range=1,65535}{group=Server}
\&    arg {number=2}{call=\-\-remote\-username}{display=Remote SSH server username}{type=string}
\&        {tooltip=The remote SSH username. If not provided, the current user will be used}{group=Authentication}
\&    arg {number=3}{call=\-\-remote\-password}{display=Remote SSH server password}{type=password}
\&        {tooltip=The SSH password, used when other methods (SSH agent or key files) are unavailable.}{group=Authentication}
\&    arg {number=4}{call=\-\-sshkey}{display=Path to SSH private key}{type=fileselect}
\&        {tooltip=The path on the local filesystem of the private ssh key}{group=Authentication}
\&    arg {number=5}{call=\-\-sshkey\-passphrase}{display=SSH key passphrase}{type=password}
\&        {tooltip=Passphrase to unlock the SSH private key}{group=Authentication}
\&    arg {number=6}{call=\-\-proxycommand}{display=ProxyCommand}{type=string}
\&        {tooltip=The command to use as proxy for the SSH connection}{group=Authentication}
\&    arg {number=7}{call=\-\-remote\-interface}{display=Remote interface}{type=string}
\&        {tooltip=The remote network interface used for capture}{group=Capture}
\&    arg {number=8}{call=\-\-remote\-capture\-command}{display=Remote capture command}{type=string}
\&        {tooltip=The remote command used to capture}{group=Capture}
\&    arg {number=9}{call=\-\-remote\-sudo}{display=Use sudo on the remote machine}{type=boolean}
\&        {tooltip=Prepend the capture command with sudo on the remote machine}{group=Capture}
\&    arg {number=10}{call=\-\-remote\-noprom}{display=No promiscuous mode}{type=boolflag}
\&        {tooltip=Don\*(Aqt use promiscuous mode on the remote machine}{group=Capture}
\&    arg {number=11}{call=\-\-remote\-filter}{display=Remote capture filter}{type=string}
\&        {tooltip=The remote capture filter}{default=not ((host myhost) and port 22)}{group=Capture}
\&    arg {number=12}{call=\-\-remote\-count}{display=Packets to capture}{type=unsigned}{default=0}
\&        {tooltip=The number of remote packets to capture. (Default: inf)}{group=Capture}
\&    arg {number=13}{call=\-\-debug}{display=Run in debug mode}{type=boolflag}{default=false}
\&        {tooltip=Print debug messages}{required=false}{group=Debug}
\&    arg {number=14}{call=\-\-debug\-file}{display=Use a file for debug}{type=string}
\&        {tooltip=Set a file where the debug messages are written}{required=false}{group=Debug}
.Ve
.PP
To capture:
.PP
.Vb 2
\&    sshdump \-\-extcap\-interface=sshdump \-\-fifo=/tmp/ssh.pcap \-\-capture \-\-remote\-host 192.168.1.10
\&    \-\-remote\-username user \-\-remote\-filter "not port 22"
.Ve
.PP
To use different capture binaries:
.PP
.Vb 2
\&    sshdump \-\-extcap\-interface=sshdump \-\-fifo=/tmp/ssh.pcap \-\-capture \-\-remote\-host 192.168.1.10
\&    \-\-remote\-capture\-command=\*(Aqdumpcap \-i eth0 \-P \-w \-\*(Aq
\&
\&    sshdump \-\-extcap\-interface=sshdump \-\-fifo=/tmp/ssh.pcap \-\-capture \-\-remote\-host 192.168.1.10
\&    \-\-remote\-capture\-command=\*(Aqsudo tcpdump \-i eth0 \-U \-w \-\*(Aq
.Ve
.PP
NOTE: To stop capturing CTRL+C/kill/terminate application.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBwireshark\fR\|(1), \fBtshark\fR\|(1), \fBdumpcap\fR\|(1), \fBextcap\fR\|(4), \fBtcpdump\fR\|(1)
.SH NOTES
.IX Header "NOTES"
\&\fBSshdump\fR is part of the \fBWireshark\fR distribution.  The latest version
of \fBWireshark\fR can be found at <https://www.wireshark.org>.
.PP
HTML versions of the Wireshark project man pages are available at:
<https://www.wireshark.org/docs/man\-pages>.
.SH AUTHORS
.IX Header "AUTHORS"
.Vb 3
\&  Original Author
\&  \-\-\-\-\-\-\-\- \-\-\-\-\-\-
\&  Dario Lombardo             <lomato[AT]gmail.com>
.Ve
